## This file contains all the schema used in the application.
## The schemas are defined using Pydantic basemodels.
## Thee schemas are used for data validation and serialization of outputs returned by the API endpoints and LLMs.

from pydantic import BaseModel, Field
from typing import List, Optional


class JDKeyWords(BaseModel):
    """
    This schema is used to define the structure of the keywords 
    extracted from a job description using LLM
    """
    company_name: Optional[str] = Field(None, description="Name of the company")
    address: Optional[str] = Field(None, description="Location of the job or company")
    role: Optional[str] = Field(None, description="Role inferred from job description")
    seniority: Optional[str] = Field(None, description="Seniority level like junior, senior, associate etc")
    must_have: List[str] = Field(..., description="Critical must-have skills needed for the job")
    nice_to_have: List[str] = Field(default_factory=list, description="Optional skills")
    tools: List[str] = Field(default_factory=list, description="Software/tools needed for this job")

class ResumeProfile(BaseModel):
    """
    This schema is used tp define the structure of the resume
    LLM extractes the key points and returns in this format
    """
    name: str = Field(..., description="Name of the cantidate applying for the job")
    contact: List[str] = Field(default_factory=list , description="contact informations such as email, phone etc")
    education: List[str] = Field(default_factory=list, description="Contains the education information of the cantidate.")
    experience: List[str] = Field(default_factory=list ,  description="Work experience of the cantidate mentioned in resume, with a short description")
    skills: List[str] = Field(default_factory=list, description="Skills of the cantidate mentioned in the resume.")
    certifications: List[str] = Field(default_factory=list , description="Certifications done by the candidate with a short description.")
    projects: List[str] = Field(default_factory=list , description="Projects done by the candidate with a short description.")

class ResumeReport(BaseModel):
    """
    This schema is used to define the structure of the report
    generated by LLM after comparing the JD keywords and Resume profile
    """
    matched_skills: List[str] = Field(default_factory=list , description="Skills that are needed in job description and present in resume")
    missed_skills: List[str] = Field(default_factory=list , description="Skills needed in job description but not present in resume.")
    phrasing_suggestions: List[str] = Field(
        default_factory=list, description="Concrete bullet suggestions to add"
    )
    relevance_score: int = Field(..., ge=0, le=100, description="Describes how relevant the resume is for the job description on a scale of 0-100")


class ATSCheckResult(BaseModel):
    """
    This schema describes the structure of the ATS check result by the LLM
    """
    score: int = Field(...,ge=0,le=100, description="ATS compatibility score of the resume from 0 to 100")
    suggestions: List[str] = Field(..., description="Concrete suggestions to improve the resume to pass ATS")